openapi: 3.0.1
info:
  title: MetricsBuilder API
  description: 'An API for accessing High Performance Computing(HPC) system monitoring metrics.'
  contact:
    name: Jie Li
    email: jie.li@ttu.edu
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: https://localhost:8080/
    description: Local test server
  - url: https://129.118.104.141:8080/
    description: Redfish server
components:
  schemas:
    'UnifiedMetrics':
      type: object
      required:
        - nodes_info
        - jobs_info
        - time_stamp
      properties:
        nodes_info:
          type: object
          required:
            - id
            - metrics
          properties:
            id:
              type: string
            metrics:
              type: object
              required:
                - memory_usage
                - cpu_usage
                - power_usage
                - fan_speed
                - cpu_inl_temp
                - job_id
              properties:
                memory_usage:
                  type: array
                  items:
                    type: number
                cpu_usage:
                  type: array
                  items:
                    type: number
                power_usage:
                  type: array
                  items:
                    type: number
                fan_speed:
                  type: array
                  items:
                    type: array
                    items:
                      type: integer
                cpu_inl_temp:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                job_id:
                  type: array
                  items:
                    type: string
        jobs_info:
          type: object
          required:
            - id
            - details
          properties:
            id:
              type: string
            details:
              type: object
              required:
                - start_time
                - submit_time
                - finish_time
                - job_name
                - user_name
                - node_list
                - total_nodes
                - cpu_cores
                - job_array
              properties:
                start_time:
                  type: number
                submit_time:
                  type: number
                finish_time:
                  type: number
                job_name:
                  type: string
                user_name:
                  type: string
                node_list:
                  type: array
                  items:
                    type: string
                total_nodes:
                  type: number
                cpu_cores:
                  type: number
                job_array:
                  type: boolean
        time_stamp: 
          type: array
          items:
            type: integer
    'ErrorMessage':
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
paths:
  /v1/metrics:
    get:
      description: |
        Get **unified metrics** based on speficied start time, end time, time interval and value type. The **start** and **end** time should follow date-time Notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. `2020-02-12T14:00:00Z`; the time **interval** should follow **duration literals**, which specify a length of time; the **value** type should only be `min`, `max`, `mean`, or `median`.
        
        A duration literal is an integer literal followed immediately (with no spaces) by a duration unit, the units include `s`(second), `m`(minute), `h`(hour), `d`(day), `w`(week).

        Use compress to specify returned data is compressed or not. If query large range of time with small interval, it would reduce significant transfering time using compressed data. For Json data compression and de-compression, please refer to [this](https://medium.com/@busybus/zipjson-3ed15f8ea85d).

        One thing to be noticed, due to we switched database on April 28, 2020 11:40:00 AM GMT-05:00 DST, currently we do not support requesting data with time range falls on this time point.
      operationId: get_unified_metric
      parameters:
      - in: query
        name: start
        required: true
        schema:
          type: string
          format: date-time
          example: '2020-02-14T12:00:00Z-05:00'
        description: start time of time range of the monitoring metrics
      - in: query
        name: end
        required: true
        schema:
          type: string
          format: date-time
          example: '2020-02-14T18:00:00Z-05:00'
        description: end time of time range of the monitoring metrics
      - in: query
        name: interval
        required: true
        schema:
          type: string
          pattern: '^[1-9][0-9]*[s, m, h, d, w]$'
          example: '5m'
        description: time interval for aggregating the monitoring metrics
      - in: query
        name: value
        required: true
        schema:
          type: string
          example: 'max'
          enum:
            - min
            - max
            - mean
            - median
        description: value type of the monitoring metrics
      - in: query
        name: compress
        required: true
        schema:
          type: boolean
          example: true
          enum:
            - true
            - false
        description: return compressed data
      responses:
        '200':
          description: Get unified metrics successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UnifiedMetrics'
        'default':
          description: Unexpected error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessage'