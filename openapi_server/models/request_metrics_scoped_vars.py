# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.interval import Interval
from openapi_server import util

from openapi_server.models.interval import Interval  # noqa: E501

class RequestMetricsScopedVars(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval=None, interval_ms=None, start_time=None):  # noqa: E501
        """RequestMetricsScopedVars - a model defined in OpenAPI

        :param interval: The interval of this RequestMetricsScopedVars.  # noqa: E501
        :type interval: Interval
        :param interval_ms: The interval_ms of this RequestMetricsScopedVars.  # noqa: E501
        :type interval_ms: Interval
        :param start_time: The start_time of this RequestMetricsScopedVars.  # noqa: E501
        :type start_time: float
        """
        self.openapi_types = {
            'interval': Interval,
            'interval_ms': Interval,
            'start_time': float
        }

        self.attribute_map = {
            'interval': '__interval',
            'interval_ms': '__interval_ms',
            'start_time': 'startTime'
        }

        self._interval = interval
        self._interval_ms = interval_ms
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt) -> 'RequestMetricsScopedVars':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestMetrics_scopedVars of this RequestMetricsScopedVars.  # noqa: E501
        :rtype: RequestMetricsScopedVars
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this RequestMetricsScopedVars.


        :return: The interval of this RequestMetricsScopedVars.
        :rtype: Interval
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this RequestMetricsScopedVars.


        :param interval: The interval of this RequestMetricsScopedVars.
        :type interval: Interval
        """

        self._interval = interval

    @property
    def interval_ms(self):
        """Gets the interval_ms of this RequestMetricsScopedVars.


        :return: The interval_ms of this RequestMetricsScopedVars.
        :rtype: Interval
        """
        return self._interval_ms

    @interval_ms.setter
    def interval_ms(self, interval_ms):
        """Sets the interval_ms of this RequestMetricsScopedVars.


        :param interval_ms: The interval_ms of this RequestMetricsScopedVars.
        :type interval_ms: Interval
        """

        self._interval_ms = interval_ms

    @property
    def start_time(self):
        """Gets the start_time of this RequestMetricsScopedVars.


        :return: The start_time of this RequestMetricsScopedVars.
        :rtype: float
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RequestMetricsScopedVars.


        :param start_time: The start_time of this RequestMetricsScopedVars.
        :type start_time: float
        """

        self._start_time = start_time
