openapi: 3.0.1
info:
  title: MetricsBuilder API
  description: 'An API for accessing High Performance Computing(HPC) system monitoring metrics.'
  contact:
    name: Jie Li
    email: jie.li@ttu.edu
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://localhost:8080/
    description: Local test server
  - url: http://129.118.104.141:8080/
    description: Redfish server
components:
  schemas:
    'UnifiedMetrics':
      type: object
      required:
        - NodesInfo
        - JobsInfo
        - TimeStamp
      properties:
        NodesInfo:
          type: object
          required:
            - Id
            - Metrics
          properties:
            Id:
              type: string
            Metrics:
              type: object
              required:
                - MemUsage
                - CPUUsage
                - NodePower
                - FanSpeed
                - CPUInlTemp
              properties:
                MemUsage:
                  type: array
                  items:
                    type: number
                CPUUsage:
                  type: array
                  items:
                    type: number
                NodePower:
                  type: array
                  items:
                    type: number
                FanSpeed:
                  type: array
                  items:
                    type: array
                    items:
                      type: integer
                CPUInlTemp:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
        JobsInfo:
          type: object
          required:
            - Id
            - Details
          properties:
            Id:
              type: string
            Details:
              type: object
              required:
                - User
                - SubmitTime
                - StartTime
                - JobName
              properties:
                User:
                  type: string
                SubmitTime:
                  type: integer
                StartTime:
                  type: integer
                JobName:
                  type: string
        TimeStamp: 
          type: array
          items:
            type: integer
    'ErrorMessage':
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
paths:
  /v1/metrics:
    get:
      description:
        Get **unified metrics** based on speficied start time, end time, time interval and value type. The **start** and **end** time should follow date-time Notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. `2020-02-12T14:00:00Z`; the time **interval** should follow **duration literals**, which specify a length of time; the **value** type should only be `min`, `max`, `mean`, or `median`.
        
        A duration literal is an integer literal followed immediately (with no spaces) by a duration unit, the units include `s`(second), `m`(minute), `h`(hour), `d`(day), `w`(week).
      operationId: get_metrics
      parameters:
      - in: query
        name: start
        required: true
        schema:
          type: string
          format: date-time
          example: '2020-02-14T12:00:00Z'
        description: start time of time range of the monitoring metrics
      - in: query
        name: end
        required: true
        schema:
          type: string
          format: date-time
          example: '2020-02-15T12:00:00Z'
        description: end time of time range of the monitoring metrics
      - in: query
        name: interval
        required: true
        schema:
          type: string
          pattern: '^[1-9][0-9]*[s, m, h, d, w]$'
          example: '5m'
        description: time interval for aggregating the monitoring metrics
      - in: query
        name: value
        required: true
        schema:
          type: string
          example: 'max'
          enum:
            - min
            - max
            - mean
            - median
        description: value type of the monitoring metrics
      responses:
        '200':
          description: Get unified metrics successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UnifiedMetrics'
        'default':
          description: Unexpected error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessage'